# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sample.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='sample.proto',
  package='sample',
  serialized_pb=_b('\n\x0csample.proto\x12\x06sample\"\xcf\x01\n\x04\x44\x61ta\x12#\n\x06mustbe\x18\x01 \x03(\x0b\x32\x13.sample.Data.MustBe\x12)\n\tmustnotbe\x18\x02 \x03(\x0b\x32\x16.sample.Data.MustNotBe\x12#\n\x06onlybe\x18\x03 \x03(\x0b\x32\x13.sample.Data.OnlyBe\x1a\x18\n\x06MustBe\x12\x0e\n\x06mustbe\x18\x01 \x02(\t\x1a\x1e\n\tMustNotBe\x12\x11\n\tmustnotbe\x18\x01 \x02(\t\x1a\x18\n\x06OnlyBe\x12\x0e\n\x06onlybe\x18\x01 \x02(\t')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_DATA_MUSTBE = _descriptor.Descriptor(
  name='MustBe',
  full_name='sample.Data.MustBe',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mustbe', full_name='sample.Data.MustBe.mustbe', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=150,
  serialized_end=174,
)

_DATA_MUSTNOTBE = _descriptor.Descriptor(
  name='MustNotBe',
  full_name='sample.Data.MustNotBe',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mustnotbe', full_name='sample.Data.MustNotBe.mustnotbe', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=176,
  serialized_end=206,
)

_DATA_ONLYBE = _descriptor.Descriptor(
  name='OnlyBe',
  full_name='sample.Data.OnlyBe',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='onlybe', full_name='sample.Data.OnlyBe.onlybe', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=208,
  serialized_end=232,
)

_DATA = _descriptor.Descriptor(
  name='Data',
  full_name='sample.Data',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mustbe', full_name='sample.Data.mustbe', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mustnotbe', full_name='sample.Data.mustnotbe', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='onlybe', full_name='sample.Data.onlybe', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_DATA_MUSTBE, _DATA_MUSTNOTBE, _DATA_ONLYBE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=25,
  serialized_end=232,
)

_DATA_MUSTBE.containing_type = _DATA
_DATA_MUSTNOTBE.containing_type = _DATA
_DATA_ONLYBE.containing_type = _DATA
_DATA.fields_by_name['mustbe'].message_type = _DATA_MUSTBE
_DATA.fields_by_name['mustnotbe'].message_type = _DATA_MUSTNOTBE
_DATA.fields_by_name['onlybe'].message_type = _DATA_ONLYBE
DESCRIPTOR.message_types_by_name['Data'] = _DATA

Data = _reflection.GeneratedProtocolMessageType('Data', (_message.Message,), dict(

  MustBe = _reflection.GeneratedProtocolMessageType('MustBe', (_message.Message,), dict(
    DESCRIPTOR = _DATA_MUSTBE,
    __module__ = 'sample_pb2'
    # @@protoc_insertion_point(class_scope:sample.Data.MustBe)
    ))
  ,

  MustNotBe = _reflection.GeneratedProtocolMessageType('MustNotBe', (_message.Message,), dict(
    DESCRIPTOR = _DATA_MUSTNOTBE,
    __module__ = 'sample_pb2'
    # @@protoc_insertion_point(class_scope:sample.Data.MustNotBe)
    ))
  ,

  OnlyBe = _reflection.GeneratedProtocolMessageType('OnlyBe', (_message.Message,), dict(
    DESCRIPTOR = _DATA_ONLYBE,
    __module__ = 'sample_pb2'
    # @@protoc_insertion_point(class_scope:sample.Data.OnlyBe)
    ))
  ,
  DESCRIPTOR = _DATA,
  __module__ = 'sample_pb2'
  # @@protoc_insertion_point(class_scope:sample.Data)
  ))
_sym_db.RegisterMessage(Data)
_sym_db.RegisterMessage(Data.MustBe)
_sym_db.RegisterMessage(Data.MustNotBe)
_sym_db.RegisterMessage(Data.OnlyBe)


# @@protoc_insertion_point(module_scope)
